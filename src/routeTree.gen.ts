/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BoilerplateImport } from './routes/boilerplate'
import { Route as IndexImport } from './routes/index'
import { Route as TestsIndexImport } from './routes/tests/index'
import { Route as SellOrdersIndexImport } from './routes/sellOrders/index'
import { Route as PurchaseOrdersIndexImport } from './routes/purchaseOrders/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ClientsIndexImport } from './routes/clients/index'
import { Route as TestsProductSelectListImport } from './routes/tests/ProductSelectList'
import { Route as SellOrdersCreateImport } from './routes/sellOrders/create'
import { Route as SellOrdersSellOrderIdImport } from './routes/sellOrders/$sellOrderId'
import { Route as ProductsCreateImport } from './routes/products/create'
import { Route as ProductsProductIdImport } from './routes/products/$productId'
import { Route as ClientsCreateImport } from './routes/clients/create'
import { Route as ClientsClientIdImport } from './routes/clients/$clientId'
import { Route as SellOrdersEditSellOrderIdImport } from './routes/sellOrders/edit.$sellOrderId'
import { Route as ProductsEditProductIdImport } from './routes/products/edit.$productId'
import { Route as ClientsEditClientIdImport } from './routes/clients/edit.$clientId'

// Create/Update Routes

const BoilerplateRoute = BoilerplateImport.update({
  path: '/boilerplate',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TestsIndexRoute = TestsIndexImport.update({
  path: '/tests/',
  getParentRoute: () => rootRoute,
} as any)

const SellOrdersIndexRoute = SellOrdersIndexImport.update({
  path: '/sellOrders/',
  getParentRoute: () => rootRoute,
} as any)

const PurchaseOrdersIndexRoute = PurchaseOrdersIndexImport.update({
  path: '/purchaseOrders/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ClientsIndexRoute = ClientsIndexImport.update({
  path: '/clients/',
  getParentRoute: () => rootRoute,
} as any)

const TestsProductSelectListRoute = TestsProductSelectListImport.update({
  path: '/tests/ProductSelectList',
  getParentRoute: () => rootRoute,
} as any)

const SellOrdersCreateRoute = SellOrdersCreateImport.update({
  path: '/sellOrders/create',
  getParentRoute: () => rootRoute,
} as any)

const SellOrdersSellOrderIdRoute = SellOrdersSellOrderIdImport.update({
  path: '/sellOrders/$sellOrderId',
  getParentRoute: () => rootRoute,
} as any)

const ProductsCreateRoute = ProductsCreateImport.update({
  path: '/products/create',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdRoute = ProductsProductIdImport.update({
  path: '/products/$productId',
  getParentRoute: () => rootRoute,
} as any)

const ClientsCreateRoute = ClientsCreateImport.update({
  path: '/clients/create',
  getParentRoute: () => rootRoute,
} as any)

const ClientsClientIdRoute = ClientsClientIdImport.update({
  path: '/clients/$clientId',
  getParentRoute: () => rootRoute,
} as any)

const SellOrdersEditSellOrderIdRoute = SellOrdersEditSellOrderIdImport.update({
  path: '/sellOrders/edit/$sellOrderId',
  getParentRoute: () => rootRoute,
} as any)

const ProductsEditProductIdRoute = ProductsEditProductIdImport.update({
  path: '/products/edit/$productId',
  getParentRoute: () => rootRoute,
} as any)

const ClientsEditClientIdRoute = ClientsEditClientIdImport.update({
  path: '/clients/edit/$clientId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/boilerplate': {
      id: '/boilerplate'
      path: '/boilerplate'
      fullPath: '/boilerplate'
      preLoaderRoute: typeof BoilerplateImport
      parentRoute: typeof rootRoute
    }
    '/clients/$clientId': {
      id: '/clients/$clientId'
      path: '/clients/$clientId'
      fullPath: '/clients/$clientId'
      preLoaderRoute: typeof ClientsClientIdImport
      parentRoute: typeof rootRoute
    }
    '/clients/create': {
      id: '/clients/create'
      path: '/clients/create'
      fullPath: '/clients/create'
      preLoaderRoute: typeof ClientsCreateImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdImport
      parentRoute: typeof rootRoute
    }
    '/products/create': {
      id: '/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateImport
      parentRoute: typeof rootRoute
    }
    '/sellOrders/$sellOrderId': {
      id: '/sellOrders/$sellOrderId'
      path: '/sellOrders/$sellOrderId'
      fullPath: '/sellOrders/$sellOrderId'
      preLoaderRoute: typeof SellOrdersSellOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/sellOrders/create': {
      id: '/sellOrders/create'
      path: '/sellOrders/create'
      fullPath: '/sellOrders/create'
      preLoaderRoute: typeof SellOrdersCreateImport
      parentRoute: typeof rootRoute
    }
    '/tests/ProductSelectList': {
      id: '/tests/ProductSelectList'
      path: '/tests/ProductSelectList'
      fullPath: '/tests/ProductSelectList'
      preLoaderRoute: typeof TestsProductSelectListImport
      parentRoute: typeof rootRoute
    }
    '/clients/': {
      id: '/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/purchaseOrders/': {
      id: '/purchaseOrders/'
      path: '/purchaseOrders'
      fullPath: '/purchaseOrders'
      preLoaderRoute: typeof PurchaseOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/sellOrders/': {
      id: '/sellOrders/'
      path: '/sellOrders'
      fullPath: '/sellOrders'
      preLoaderRoute: typeof SellOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/tests/': {
      id: '/tests/'
      path: '/tests'
      fullPath: '/tests'
      preLoaderRoute: typeof TestsIndexImport
      parentRoute: typeof rootRoute
    }
    '/clients/edit/$clientId': {
      id: '/clients/edit/$clientId'
      path: '/clients/edit/$clientId'
      fullPath: '/clients/edit/$clientId'
      preLoaderRoute: typeof ClientsEditClientIdImport
      parentRoute: typeof rootRoute
    }
    '/products/edit/$productId': {
      id: '/products/edit/$productId'
      path: '/products/edit/$productId'
      fullPath: '/products/edit/$productId'
      preLoaderRoute: typeof ProductsEditProductIdImport
      parentRoute: typeof rootRoute
    }
    '/sellOrders/edit/$sellOrderId': {
      id: '/sellOrders/edit/$sellOrderId'
      path: '/sellOrders/edit/$sellOrderId'
      fullPath: '/sellOrders/edit/$sellOrderId'
      preLoaderRoute: typeof SellOrdersEditSellOrderIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  BoilerplateRoute,
  ClientsClientIdRoute,
  ClientsCreateRoute,
  ProductsProductIdRoute,
  ProductsCreateRoute,
  SellOrdersSellOrderIdRoute,
  SellOrdersCreateRoute,
  TestsProductSelectListRoute,
  ClientsIndexRoute,
  ProductsIndexRoute,
  PurchaseOrdersIndexRoute,
  SellOrdersIndexRoute,
  TestsIndexRoute,
  ClientsEditClientIdRoute,
  ProductsEditProductIdRoute,
  SellOrdersEditSellOrderIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/boilerplate",
        "/clients/$clientId",
        "/clients/create",
        "/products/$productId",
        "/products/create",
        "/sellOrders/$sellOrderId",
        "/sellOrders/create",
        "/tests/ProductSelectList",
        "/clients/",
        "/products/",
        "/purchaseOrders/",
        "/sellOrders/",
        "/tests/",
        "/clients/edit/$clientId",
        "/products/edit/$productId",
        "/sellOrders/edit/$sellOrderId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/boilerplate": {
      "filePath": "boilerplate.tsx"
    },
    "/clients/$clientId": {
      "filePath": "clients/$clientId.tsx"
    },
    "/clients/create": {
      "filePath": "clients/create.tsx"
    },
    "/products/$productId": {
      "filePath": "products/$productId.tsx"
    },
    "/products/create": {
      "filePath": "products/create.tsx"
    },
    "/sellOrders/$sellOrderId": {
      "filePath": "sellOrders/$sellOrderId.tsx"
    },
    "/sellOrders/create": {
      "filePath": "sellOrders/create.tsx"
    },
    "/tests/ProductSelectList": {
      "filePath": "tests/ProductSelectList.tsx"
    },
    "/clients/": {
      "filePath": "clients/index.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/purchaseOrders/": {
      "filePath": "purchaseOrders/index.tsx"
    },
    "/sellOrders/": {
      "filePath": "sellOrders/index.tsx"
    },
    "/tests/": {
      "filePath": "tests/index.tsx"
    },
    "/clients/edit/$clientId": {
      "filePath": "clients/edit.$clientId.tsx"
    },
    "/products/edit/$productId": {
      "filePath": "products/edit.$productId.tsx"
    },
    "/sellOrders/edit/$sellOrderId": {
      "filePath": "sellOrders/edit.$sellOrderId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
